import java.util.*;

/**
   A Class for the Telephone etude in Cosc326 SS 2018.
   Takes a number from stdin and determines if it is a valid number.
   @author Amanda Veldman (4389944)
*/

public class Telephone {

    /** declare a public array list that will be used to check duplicates.
     */
    public static ArrayList<String> numbers = new ArrayList<String>();

    /** Main method takes input from stdin and outputs to stdout.
     */
    public static void main (String [] args){
        
        Scanner sc = new Scanner(System.in);
        String input;
        while (sc.hasNextLine()){
            input = sc.nextLine();
            if (valid(input) != "INV"){
                if (dups(valid(input))){
                    System.out.println(valid(input) + " DUP");
                } else {
                    numbers.add(valid(input));
                    System.out.println(valid(input));
                }
            } else {
                System.out.println(input + " INV");
            }
        }
    }

    /** valid method checks if numbers that have been input are valid.
        @param t is the telephone number to be checked.
        @return the valid numbers or INV.
    */
    public static String valid (String t){

        //02
        if (t.matches("((^.?02\\W[0-9].*$)|(^(02409)\\d{4}$))")){
            t = t.replaceAll("[^A-Z0-9[()]]", "");
            if (t.matches("^(02409)\\d{4}$")){
                return (t.substring(0,2) + " "+
                        format(t.substring(2, t.length())));
            } else {
                return "INV";
            }
        }
        
        //strip non word characters from numbers
        t = t.replaceAll("[^A-Z0-9[()]]", "");
        
        //0508, 0800, 0900
        if(t.matches("^(0508)(([0-9A-Z]{6,9})|([0-9]{6}))$")){
            if (t.matches("^.*[A-Z].*$")){
                return (t.substring(0,4) + " " +
                        format(letters(t.substring(4,10))));
            }
            return (t.substring(0,4) + " " + format(t.substring(4,t.length())));
        } else if (t.matches("^(0800)(([0-9A-Z]{6,9})|[0-9]{6,7})$")){
            if (t.matches("^.*[A-Z].*$")){
                return (t.substring(0,4) + " " +
                        format(letters(t.substring
                                       (4,(Math.min(11, t.length()))))));
            }
            return (t.substring(0,4) + " " + format(t.substring(4,t.length())));
        } else if (t.matches("^(0900)(([0-9A-Z]{5,9})|([0-9]{5}))$")){
            if (t.matches("^.*[A-Z].*$")){
                return (t.substring(0,4) + " " +
                        format(letters(t.substring(4,9))));
            }
            return (t.substring(0,4) + " " + format(t.substring(4,t.length())));

            //021, 022, 027, 025
        } else if (t.matches("^(021)\\d{6,8}$")){
            return (t.substring(0,3) + " " +
                    format(t.substring(3, t.length())));
        } else if (t.matches("^((022)|(027))\\d{7}$")){
            return (t.substring(0,3) + " " +
                    format(t.substring(3, t.length())));
        } else if (t.matches("^(025)\\d{6}$")){
            return ("027 " + format("4" + t.substring(3, t.length())));

            // 03, 04, 06, 07, 09
        } else if (t.matches
                   ("^0[34679](((?!900|911|999)[2-9]\\d{4})|(\\d{7}))$")){
            return (t.substring(0,2) + " " + format(t.substring(2,8)));
        } else {
            return "INV";
        }
    }

    /** method to replace all letters in 0508, 0800, 0900 numbers with their
       corresponding numbers
       @param number of which letters will be replaced
       @return String with converted numbers
    */
    public static String letters (String t){

        String nums = t;

        nums = nums.replaceAll("[ABC]", "2");
        nums = nums.replaceAll("[DEF]", "3");
        nums = nums.replaceAll("[GHI]", "4");
        nums = nums.replaceAll("[JKL]", "5");
        nums = nums.replaceAll("[MNO]", "6");
        nums = nums.replaceAll("[PQRS]", "7");
        nums = nums.replaceAll("[TUV]", "8");
        nums = nums.replaceAll("[WXYZ]", "9");
        return nums;
    }

    /** a method to make the numbers fit the standard format based on length.
        @param is the number to be formatted.
        @return a String of the number with correct formatting.
    */
    public static String format (String t){

        String result = t;
        if (result.length() == 6 || result.length() == 7){
            return (result.substring(0,3) + " " +
                    result.substring(3, result.length()));
        } else if (result.length() == 8){
            return (result.substring(0,4) + " " + result.substring(4,8));
        } else {
            return result;
        }
    }

    /** a method to check if any valid numbers have duplicates.
        @param t is the telephone number to be checked for duplicates
        @return a boolean to represent if there was a duplicate or not.
    */
    public static boolean dups(String t){

        if (numbers.contains(t)){
            return true;
        } numbers.add(t);
        return false;
    }   
}
