import java.util.*;
/**
 * An application class for the Colour of the day etude in
 * COCSC326 SS 2018.
 *
 * @author Daniela Lemow, Amanda Veldman, Jack Manning, Sophie Purdie
 */
public class JSADColourDay {

    public static String[] calendar;
    
    public static void main(String[] args) {

        calendar = new String[1001];
        calendar[0] = null;
        calendar[1] = "NO COLOUR";
        colourOfTheDay();

        
        for (int i = 2; i < calendar.length; i++) {
            System.out.println(i + " " + calendar[i].toUpperCase());
        }
    }

    /**
     * Determines what colour each day should be and
     * sets it accordingly in the global array "calendar".
     */
    public static void colourOfTheDay() {

        for (int i = 2; i < calendar.length; i++) {
            if (isPrime(i)) {

                switch ((i)%7) {
                    case 1 : case 4 : // Monday and Thursday
                        calendar[i] = "Red";
                        break;
                    case 2 : case 5 : // Tuesday and Friday
                        calendar[i] = "Green";
                        break;
                    case 3 : case 6 : // Wednesday and Saturday
                        calendar[i] = "Blue";
                        break;
                    case 0 : // Sunday
                        calendar[i] = "Gold";
                        break;
                }
            } else {
                calendar[i] = nonPrimeDay(i);
            }
        }
    }

    /**
     * Determines what colour a non-prime day should be.
     * @return String a string representing the colour of
     * the non-prime day.
     */
    public static String nonPrimeDay(int d) {

        int red = 0;
        int green = 0;
        int blue = 0;

        for (int i = 2; i < d; i++) {
            if (d % i == 0) {
                if (calendar[i].equals("Red")) {
                    red++;
                } else if (calendar[i].equals("Green")) {
                    green++;
                } else if (calendar[i].equals("Blue")) {
                    blue++;
                }
            }
        }

        if (red == green && green == blue) {
            return "Gold";
        } else if (red == green || (blue < green && blue < red)) {
            return "Blue";
        } else if (green == blue || (red < green && red < blue)) {
            return "Red";
        } else if (blue == red || (green < red && green < blue)) {
            return "Green";
        }

        return "inconclusive";
        
    }

    /**
     * Returns a boolean indicating if a number is prime.
     * @return boolean indicates if a number is prime.
     */
    public static boolean isPrime(int n) {

        for (int i = 2; i < n; i++) {
            if (n % i == 0) {
                return false;
            }
        }
        return true;
    }

}
